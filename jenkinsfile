#!groovy

pipeline {

    agent {
        label 'docker-maven-slave'
    }
    triggers {
        githubPush()
    }
	parameters {
		string(name: 'modelname', defaultValue: '<your rasa url>')

	}

    environment {
        BUILD_VERSION = "$currentBuild.number".trim()
        BRANCH = "$BRANCH_NAME"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }

    stages {
      stage ('Build and Deploy Chatbot/FAQ') {
            steps {
              withCredentials([usernamePassword(credentialsId: '<Jenkins credentials username>', passwordVariable: '<Jenkins credentials password>', usernameVariable: 'username')]) {
                sh """
                  git config --global user.name "<your name>"
                  git config --global user.email "<your email>"
                  export CURRENT_BRANCH=master
                  export GITHUB_HOST=<your github host>
                  git clone https://${username}:${password}@github.com/<org>/<repo>.git
		              cd <into your repo folder>
                  git remote -v
                """
              }
              withCredentials([usernamePassword(credentialsId: '<Jenkins credentials username>', passwordVariable: '<Jenkins credentials password>', usernameVariable: 'username')]) {
              sh '''
                echo "Creating Build ID"
                echo ${BUILD_VERSION} >> modelname.txt

                echo "Create and Update Virtual Env"
                wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86.sh -O miniconda.sh              
                bash miniconda.sh -b -p $PWD/miniconda
                export PATH="$PWD/miniconda/bin:$PATH"
                conda create -y -q -n chatscript python=3
                source activate chatscript
                pip install --upgrade pip
                pip install pandas
                pip install requests
                pip install tensorflow
                pip install rasa
		conda install -c conda-forge hub
		git config --global --add hub.host github.com
                
                echo "Run File Creation Script"
                python chatscript.py

                echo "Train Models"
                python rasatrain.py
                ls -d -l models
                curl -k -F "model=@models/\"${BUILD_VERSION}.tar.gz\"" "<your rasa url + token>"
                
                echo "Upload Rasa Model"
                python rasaUpload.py

                echo "Start GIT Workflow"   
                cd ./<Your cloned repo>
		git checkout -b "Jenkins-Build-\"${BUILD_VERSION}\""
		git remote add upstream <your github repo here>
		git pull upstream master
		cd ..
		cp faq.mdx ./<your cloned repo faq location> -f
		cd ./<Your cloned repo base location>
                git add <directory to your FAQ>
                git commit -m "Automated FAQ Update"
                git push --set-upstream origin Jenkins-Build-${BUILD_VERSION}
		echo "\"${username}\" \"${password}\"" hub pull-request --base <Your repo>:master --head <Username>:automated-jenkins --message Automated-Jenkins-Build
                '''
              }
            }
        }

    }
}
